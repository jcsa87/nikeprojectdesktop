<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>